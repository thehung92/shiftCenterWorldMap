[{"path":"https://thehung92.github.io/shiftCenterWorldMap/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Hung TT Nguyen Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://thehung92.github.io/shiftCenterWorldMap/articles/animate-world.html","id":"plot-world-map-with-custom-center","dir":"Articles","previous_headings":"","what":"plot world map with custom center","title":"Animate rotating world map","text":"","code":"# countries center = 100 sf.world = create_world_map_custom_center(center) #> Spherical geometry (s2) switched off #> although coordinates are longitude/latitude, st_intersection assumes that they #> are planar #> Warning: attribute variables are assumed to be spatially constant throughout #> all geometries #> Spherical geometry (s2) switched on # ocean sf.ocean = create_ocean_background(center) # declare the robinson project with shifted center myCrs = paste0('+proj=robin +lon_0=', center, ' +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84') # plot map = ggplot() +   geom_sf(data = sf.ocean, fill =\"lightskyblue\", alpha = 0.5) +   geom_sf(data = sf.world) +   coord_sf(crs = myCrs, default_crs = st_crs(4326)) +   theme(panel.background = element_blank(),         axis.ticks = element_blank(),         axis.text = element_blank()) map"},{"path":"https://thehung92.github.io/shiftCenterWorldMap/articles/animate-world.html","id":"plot-multiple-world-map-with-center-moving-on-the-equator-with-5-interval","dir":"Articles","previous_headings":"","what":"plot multiple world map with center moving on the equator with 5˚ interval","title":"Animate rotating world map","text":"","code":"# function to plot and save plot_map_with_moving_center <- function(center) {   # countries   sf.world = create_world_map_custom_center(center)   # ocean   sf.ocean = create_ocean_background(center)   # declare the robinson project with shifted center   myCrs = paste0('+proj=robin +lon_0=', center, ' +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84')   # plot and save   map = ggplot() +     geom_sf(data = sf.ocean, fill =\"lightskyblue\", alpha = 0.5) +     geom_sf(data = sf.world) +     coord_sf(crs = myCrs, default_crs = st_crs(4326)) +     theme(panel.background = element_blank(),           axis.ticks = element_blank(),           axis.text = element_blank())   ggsave(paste0(\"tmp/world.\", center,\".png\"), plot = map,          units = \"px\", width = 800, height = 400, bg = \"transparent\") } # centers = seq(-175, 180, 5) for (center in centers) {   plot_map_with_moving_center(center) }"},{"path":"https://thehung92.github.io/shiftCenterWorldMap/articles/animate-world.html","id":"read-the-png-img-and-animate-with-gifski","dir":"Articles","previous_headings":"","what":"read the png img and animate with gifski","title":"Animate rotating world map","text":"","code":"library(gifski) infiles = paste0(\"tmp/world.\", centers,\".png\") gifski(infiles,        gif_file = \"man/figures/animation-world.gif\",        width = 800, height = 400, delay = 0.2)"},{"path":[]},{"path":"https://thehung92.github.io/shiftCenterWorldMap/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hung TT Nguyen. Maintainer.","code":""},{"path":"https://thehung92.github.io/shiftCenterWorldMap/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hung TT Nguyen (2023) shiftCenterWorldMap. url: github.com/thehung92/shiftCenterWorldMap","code":"@Misc{,   title = {shiftCenterWorldMap},   author = {Hung TT Nguyen},   year = {2023},   url = {https://github.com/thehung92/shiftCenterWorldMap}, }"},{"path":"https://thehung92.github.io/shiftCenterWorldMap/index.html","id":"shiftcenterworldmap","dir":"","previous_headings":"","what":"shift the center of world map plot in ggplot in robinson projection","title":"shift the center of world map plot in ggplot in robinson projection","text":"goal shiftCenterWorldMap vizualize fish-eyed world (robinson projection) center map area interest. rotate-world WARNING: animation part package feature :D","code":""},{"path":"https://thehung92.github.io/shiftCenterWorldMap/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"shift the center of world map plot in ggplot in robinson projection","text":"can install development version shiftCenterWorldMap GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"thehung92/shiftCenterWorldMap\")"},{"path":"https://thehung92.github.io/shiftCenterWorldMap/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"shift the center of world map plot in ggplot in robinson projection","text":"Create world map robinson project center lon:lat=100:0 plot ggplot  can see world map fish-eye shaped plot panel still rectangle. Therefore, fill color ocean normally theme(panel.background) method fill whole rectangle blue. want fish-eyed shape polygon can plot background adding worldmap layer.  Sometime, want graticule grid idea coordinate location looking  end result ggplot object able save file ggsave","code":"library(shiftCenterWorldMap) #> The legacy packages maptools, rgdal, and rgeos, underpinning the sp package, #> which was just loaded, will retire in October 2023. #> Please refer to R-spatial evolution reports for details, especially #> https://r-spatial.org/r/2023/05/15/evolution4.html. #> It may be desirable to make the sf package available; #> package maintainers should consider adding sf to Suggests:. #> The sp package is now running under evolution status 2 #>      (status 2 uses the sf package in place of rgdal) library(ggplot2) library(sf) #> Linking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE ## basic example code center = 100 sf.world = create_world_map_custom_center(center) #> Spherical geometry (s2) switched off #> although coordinates are longitude/latitude, st_intersection assumes that they #> are planar #> Warning: attribute variables are assumed to be spatially constant throughout #> all geometries #> Spherical geometry (s2) switched on ggplot() +   geom_sf(data = sf.world) sf.ocean = create_ocean_background(center) # declare the robinson project with shifted center myCrs = paste0('+proj=robin +lon_0=', center, ' +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84') # the coord_sf is super important because ## you need to declare coordinate reference system (CRS) you want to plot for all layers ## you also need to declare the default crs 4326 so that ggplot know to interpret the non-sf layer as degree and in the lon:lat=0:0 degree. map = ggplot() +   geom_sf(data = sf.ocean, fill =\"lightskyblue\", alpha = 0.5) +   geom_sf(data = sf.world) +   coord_sf(crs = myCrs, default_crs = st_crs(4326)) +   theme(panel.background = element_blank(),         axis.ticks = element_blank(),         axis.text = element_blank()) map map2 = map +   # custom grid line every 20degree longitude and every 10 degree latitude   scale_x_continuous(breaks = seq(-180, 180, 20)) +   scale_y_continuous(breaks = seq(-90, 90, 10)) +   theme(panel.grid = element_line(colour = \"deepskyblue\",                                   linetype = 3,                                   linewidth = 0.2)) map2"},{"path":"https://thehung92.github.io/shiftCenterWorldMap/reference/create_meridian.html","id":null,"dir":"Reference","previous_headings":"","what":"create meridian at longitude — create_meridian","title":"create meridian at longitude — create_meridian","text":"define long & slim polygon overlaps meridian line & set CRS match world","code":""},{"path":"https://thehung92.github.io/shiftCenterWorldMap/reference/create_meridian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create meridian at longitude — create_meridian","text":"","code":"create_meridian(long, deviation = 1e-04)"},{"path":"https://thehung92.github.io/shiftCenterWorldMap/reference/create_meridian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create meridian at longitude — create_meridian","text":"long longitude -180 180 degree deviation default 1e-4, around unit second","code":""},{"path":"https://thehung92.github.io/shiftCenterWorldMap/reference/create_meridian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create meridian at longitude — create_meridian","text":"sfc polygon","code":""},{"path":"https://thehung92.github.io/shiftCenterWorldMap/reference/create_ocean_background.html","id":null,"dir":"Reference","previous_headings":"","what":"object ocean as an oval for prime meridian at custom longitude — create_ocean_background","title":"object ocean as an oval for prime meridian at custom longitude — create_ocean_background","text":"object ocean oval prime meridian custom longitude","code":""},{"path":"https://thehung92.github.io/shiftCenterWorldMap/reference/create_ocean_background.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"object ocean as an oval for prime meridian at custom longitude — create_ocean_background","text":"","code":"create_ocean_background(long)"},{"path":"https://thehung92.github.io/shiftCenterWorldMap/reference/create_ocean_background.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"object ocean as an oval for prime meridian at custom longitude — create_ocean_background","text":"long longitude custom center","code":""},{"path":"https://thehung92.github.io/shiftCenterWorldMap/reference/create_ocean_background.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"object ocean as an oval for prime meridian at custom longitude — create_ocean_background","text":"sf object oval polygon","code":""},{"path":"https://thehung92.github.io/shiftCenterWorldMap/reference/create_world_map_custom_center.html","id":null,"dir":"Reference","previous_headings":"","what":"create world map as sf object — create_world_map_custom_center","title":"create world map as sf object — create_world_map_custom_center","text":"create world map sf object","code":""},{"path":"https://thehung92.github.io/shiftCenterWorldMap/reference/create_world_map_custom_center.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create world map as sf object — create_world_map_custom_center","text":"","code":"create_world_map_custom_center(center = 100, class = \"sf\")"},{"path":"https://thehung92.github.io/shiftCenterWorldMap/reference/create_world_map_custom_center.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create world map as sf object — create_world_map_custom_center","text":"name description","code":""},{"path":"https://thehung92.github.io/shiftCenterWorldMap/reference/create_world_map_custom_center.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create world map as sf object — create_world_map_custom_center","text":"sf object","code":""},{"path":"https://thehung92.github.io/shiftCenterWorldMap/reference/create_world_map_custom_center.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create world map as sf object — create_world_map_custom_center","text":"","code":"sf = create_world_map_custom_center() #> Spherical geometry (s2) switched off #> although coordinates are longitude/latitude, st_intersection assumes that they #> are planar #> Warning: attribute variables are assumed to be spatially constant throughout all geometries #> Spherical geometry (s2) switched on ggplot() + geom_sf(data =sf) #> Error in ggplot(): could not find function \"ggplot\""},{"path":"https://thehung92.github.io/shiftCenterWorldMap/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://thehung92.github.io/shiftCenterWorldMap/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://thehung92.github.io/shiftCenterWorldMap/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://thehung92.github.io/shiftCenterWorldMap/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://thehung92.github.io/shiftCenterWorldMap/reference/shiftCenterWorldMap-package.html","id":null,"dir":"Reference","previous_headings":"","what":"shiftCenterWorldMap: shift the center of world map plot in ggplot in robinson projection — shiftCenterWorldMap-package","title":"shiftCenterWorldMap: shift the center of world map plot in ggplot in robinson projection — shiftCenterWorldMap-package","text":"generate world map sf object vignette animation","code":""},{"path":[]}]
